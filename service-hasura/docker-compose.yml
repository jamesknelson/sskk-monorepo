version: "3.7"
services:
  postgres:
    container_name: sskk_postgres
    image: postgres:12
    platform: linux/arm64
    restart: always
    expose:
      - "5431" # Publishes 5431 to other containers but NOT to host machine
    ports:
      - "5431:5431"
    volumes:
      - sskk_db_data:/var/lib/postgresql/data
    command: -p 5431
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    container_name: sskk_hasura
    image: fedormelexin/graphql-engine-arm64:v2.0.7.cli-migrations-v3
    ports:
      - "3711:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      PORT: 3711
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5431/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5431/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES:
        startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: inherited_roles

      ACTION_BASE_PROTOCOL: http
      ACTION_BASE_HOST_AND_PORT: host.docker.internal:8000
      ACTION_SECRET: test

      # HASURA_GRAPHQL_ADMIN_SECRET: local
      # HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      # HASURA_GRAPHQL_JWT_SECRET:
      #   '{
      #   "type":"RS256",
      #   "jwk_url":"https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com",
      #   "audience":"sskk-dev",
      #   "issuer":"https://securetoken.google.com/sskk-dev",
      #   "claims_map":{
      #   "x-hasura-allowed-roles":["anonymous","customer"],
      #   "x-hasura-default-role":"customer",
      #   "x-hasura-auth-time":{"path":"$.auth_time"},
      #   "x-hasura-customer-id":{"path":"$.customer_id"}
      #   }
      #   }'
volumes:
  sskk_db_data:
