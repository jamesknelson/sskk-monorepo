query DashboardPostList($profile_id: uuid!) {
  posts(where: {profile_id: {_eq: $profile_id}}) {
    id
    versions: post_versions(order_by: {updated_at: desc}, limit: 1) {
      id
      title
      content
      locked_for_publication
      updated_at
    }
    created_at
    deleted_at
    published_at
  }
}

query DashboardPostEditor($post_id: uuid!) {
  post: posts_by_pk(id: $post_id) {
    id
    versions: post_versions(order_by: {updated_at: desc}, limit: 1) {
      id
      title
      locked_for_publication
      updated_at
      content
      editor_state
      slug
    }
    created_at
    deleted_at
    published_at
  }
}

# Example vars:
# {
#   "profile_id": "48b4f201-cfbf-4196-a046-19fe293d1320",
#   "version": {
#    	"content": {"test": true},
#    	"editor_state": {"test": true},
#     "title": "Test",
#   	"slug": "test"
#   }
# }
mutation CreatePost($profile_id: uuid!, $version: post_versions_insert_input!) {
  insert_posts_one(object: {profile_id: $profile_id, post_versions: {data: [$version]}}) {
    id
    created_at
    deleted_at
    published_at
    versions: post_versions {
      content
      editor_state
      id
      locked_for_publication
      slug
      title
    }
  }
}

# Example vars:
# {
#   "version": {
#     "post_id": "df7a2c2e-b857-484c-9868-43e940504535",
#     "content": {"test1": true},
#     "editor_state": {"test1": true},
#     "title": "Test",
#     "slug": "test"
#   }
# }
mutation SavePostDraft($version: post_versions_insert_input!) {
  insert_post_versions(objects: [$version], on_conflict: {constraint: post_versions_locked_for_publication, update_columns: [editor_state, content, slug, title], where: {locked_for_publication: {_eq: false}}}) {
    returning {
      id
      locked_for_publication
      editor_state
      content
      slug
      title
      updated_at
      created_at
    }
  }
}

# Example vars:
# {
#   "post_id": "6dc7cbb1-5033-4bcc-96fe-f2b6e66e9ebe",
#   "published_at": "2021-01-06T00:00:00Z"
# }
mutation PublishPost($post_id: uuid!, $published_at: timestamp!) {
  update_post_versions(where: {post_id: {_eq: $post_id}, locked_for_publication: {_eq: false}}, _set: {locked_for_publication: true}) {
    returning {
      id
      locked_for_publication
    }
  }
  update_posts_by_pk(pk_columns: {id: $post_id}, _set: {published_at: $published_at}) {
    id
    latest_version_id
    latest_version_locked_for_publication
    latest_version_slug
    published_at
  }
}